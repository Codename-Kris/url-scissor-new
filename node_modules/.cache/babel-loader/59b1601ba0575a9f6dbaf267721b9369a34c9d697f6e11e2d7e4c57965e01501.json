{"ast":null,"code":"var _jsxFileName = \"E:\\\\ALT SCHOOL\\\\CAPSTONE PROJECT\\\\my-project\\\\url-scissor-main\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Routes, Route, useNavigationType, useLocation } from 'react-router-dom';\nimport UpdatedDesign from './pages/UpdatedDesign';\nimport GetAQuote from './pages/GetAQuote';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n  useEffect(() => {\n    if (action !== 'POP') {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n  useEffect(() => {\n    let title = '';\n    let metaDescription = '';\n    switch (pathname) {\n      case '/':\n        title = 'Home';\n        metaDescription = 'Welcome to our website';\n        break;\n      case '/get-a-quote':\n        title = 'Get a Quote';\n        metaDescription = 'Get a quote for our services';\n        break;\n      case '/login':\n        title = 'Login';\n        metaDescription = 'Login to access your account';\n        break;\n      case '/sign-up':\n        title = 'Sign Up';\n        metaDescription = 'Create a new account';\n        break;\n      default:\n        title = '404 Not Found';\n        metaDescription = 'Page not found';\n        break;\n    }\n    document.title = title;\n    const metaDescriptionTag = document.querySelector('head > meta[name=\"description\"]');\n    if (metaDescriptionTag) {\n      metaDescriptionTag.content = metaDescription;\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(UpdatedDesign, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/get-a-quote\",\n      element: /*#__PURE__*/_jsxDEV(GetAQuote, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 43\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/sign-up\",\n      element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 39\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tIxn6LeLpV6gTw4imGOVhWpUIdU=\", false, function () {\n  return [useNavigationType, useLocation];\n});\n_c = App;\nexport default App;\n\n// import {\n//   Routes,\n//   Route,\n//   useNavigationType,\n//   useLocation,\n// } from \"react-router-dom\";\n// import UpdatedDesign from \"./pages/UpdatedDesign\";\n// import GetAQuote from \"./pages/GetAQuote\";\n// import Login from \"./pages/Login\";\n// import SignUp from \"./pages/SignUp\";\n// import React, { useEffect } from 'react';\n\n// function App() {\n//   const action = useNavigationType();\n//   const location = useLocation();\n//   const pathname = location.pathname;\n\n//   useEffect(() => {\n//     if (action !== \"POP\") {\n//       window.scrollTo(0, 0);\n//     }\n//   }, [action, pathname]);\n\n//   useEffect(() => {\n//     let title = \"\";\n//     let metaDescription = \"\";\n\n//     switch (pathname) {\n//       case \"/\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//       case \"/get-a-quote\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//       case \"/login\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//       case \"/sign-up\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//     }\n\n//     if (title) {\n//       document.title = title;\n//     }\n\n//     if (metaDescription) {\n//       const metaDescriptionTag: HTMLMetaElement | null = document.querySelector(\n//         'head > meta[name=\"description\"]'\n//       );\n//       if (metaDescriptionTag) {\n//         metaDescriptionTag.content = metaDescription;\n//       }\n//     }\n//   }, [pathname]);\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<UpdatedDesign />} />\n//       <Route path=\"/get-a-quote\" element={<GetAQuote />} />\n//       <Route path=\"/login\" element={<Login />} />\n//       <Route path=\"/sign-up\" element={<SignUp />} />\n//     </Routes>\n//   );\n// }\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Routes","Route","useNavigationType","useLocation","UpdatedDesign","GetAQuote","Login","SignUp","jsxDEV","_jsxDEV","App","_s","action","location","pathname","window","scrollTo","title","metaDescription","document","metaDescriptionTag","querySelector","content","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/ALT SCHOOL/CAPSTONE PROJECT/my-project/url-scissor-main/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport {\n  Routes,\n  Route,\n  useNavigationType,\n  useLocation,\n} from 'react-router-dom';\nimport UpdatedDesign from './pages/UpdatedDesign';\nimport GetAQuote from './pages/GetAQuote';\nimport Login from './pages/Login';\nimport SignUp from './pages/SignUp';\n\nfunction App() {\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  useEffect(() => {\n    if (action !== 'POP') {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n\n  useEffect(() => {\n    let title = '';\n    let metaDescription = '';\n\n    switch (pathname) {\n      case '/':\n        title = 'Home';\n        metaDescription = 'Welcome to our website';\n        break;\n      case '/get-a-quote':\n        title = 'Get a Quote';\n        metaDescription = 'Get a quote for our services';\n        break;\n      case '/login':\n        title = 'Login';\n        metaDescription = 'Login to access your account';\n        break;\n      case '/sign-up':\n        title = 'Sign Up';\n        metaDescription = 'Create a new account';\n        break;\n      default:\n        title = '404 Not Found';\n        metaDescription = 'Page not found';\n        break;\n    }\n\n    document.title = title;\n\n    const metaDescriptionTag: HTMLMetaElement | null = document.querySelector(\n      'head > meta[name=\"description\"]'\n    );\n    if (metaDescriptionTag) {\n      metaDescriptionTag.content = metaDescription;\n    }\n  }, [pathname]);\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<UpdatedDesign />} />\n      <Route path=\"/get-a-quote\" element={<GetAQuote />} />\n      <Route path=\"/login\" element={<Login />} />\n      <Route path=\"/sign-up\" element={<SignUp />} />\n    </Routes>\n  );\n}\n\nexport default App;\n\n\n\n// import {\n//   Routes,\n//   Route,\n//   useNavigationType,\n//   useLocation,\n// } from \"react-router-dom\";\n// import UpdatedDesign from \"./pages/UpdatedDesign\";\n// import GetAQuote from \"./pages/GetAQuote\";\n// import Login from \"./pages/Login\";\n// import SignUp from \"./pages/SignUp\";\n// import React, { useEffect } from 'react';\n\n\n// function App() {\n//   const action = useNavigationType();\n//   const location = useLocation();\n//   const pathname = location.pathname;\n\n//   useEffect(() => {\n//     if (action !== \"POP\") {\n//       window.scrollTo(0, 0);\n//     }\n//   }, [action, pathname]);\n\n//   useEffect(() => {\n//     let title = \"\";\n//     let metaDescription = \"\";\n\n//     switch (pathname) {\n//       case \"/\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//       case \"/get-a-quote\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//       case \"/login\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//       case \"/sign-up\":\n//         title = \"\";\n//         metaDescription = \"\";\n//         break;\n//     }\n\n//     if (title) {\n//       document.title = title;\n//     }\n\n//     if (metaDescription) {\n//       const metaDescriptionTag: HTMLMetaElement | null = document.querySelector(\n//         'head > meta[name=\"description\"]'\n//       );\n//       if (metaDescriptionTag) {\n//         metaDescriptionTag.content = metaDescription;\n//       }\n//     }\n//   }, [pathname]);\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<UpdatedDesign />} />\n//       <Route path=\"/get-a-quote\" element={<GetAQuote />} />\n//       <Route path=\"/login\" element={<Login />} />\n//       <Route path=\"/sign-up\" element={<SignUp />} />\n//     </Routes>\n//   );\n// }\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}